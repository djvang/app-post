{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\New app\\\\src\\\\components\\\\Main\\\\Main.js\";\nimport React, { useState, useEffect } from \"react\";\nimport FilterBar from \"./FilterBar/FilterBar\";\nimport PostsList from \"./PostsList/PostsList\";\nimport LoadMore from \"./LoadMore/LoadMore\";\nimport Pagination from \"./Pagination/Pagination\";\nimport { loadPosts } from '../../api';\nconst TOTAL_COUNT = 100;\nexport default function Main() {\n  const [posts, setPosts] = useState([]);\n  const [limit, setLimit] = useState(6);\n  const [sort, setSort] = useState(\"ASC\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [isLoadMore, setIsLoadMore] = useState(false);\n  const totalPages = Math.ceil(TOTAL_COUNT / limit);\n  useEffect(() => {\n    loadPosts().then(data => setPosts(data));\n  }, []);\n\n  const handleSortChange = selectedSort => {\n    setSort(selectedSort);\n    setIsLoadMore(false);\n    /*posts.sort(function(a,b){ \r\n      if (selectedSort = \"ASC\") {\r\n        return a.id - b.id\r\n      }\r\n      if (selectedSort = \"DESC\") {\r\n        return b.id - a.id\r\n      }\r\n    })*/\n\n    loadPosts(1, selectedSort).then(data => setPosts(data));\n  };\n\n  console.log(posts);\n\n  const handleLimitChange = selectedLimit => {\n    setLimit(selectedLimit);\n    setCurrentPage(1);\n    setIsLoadMore(false);\n    loadPosts(1, selectedLimit).then(data => setPosts(data));\n  };\n\n  const handlePaginationSelect = selectedPage => {\n    if (isLoadMore && selectedPage <= currentPage) return;\n    setCurrentPage(selectedPage);\n    setIsLoadMore(false);\n    loadPosts(selectedPage, limit).then(data => setPosts(data));\n  };\n\n  const handleLoadMore = () => {\n    const page = currentPage + 1;\n    setIsLoadMore(true);\n    setCurrentPage(page);\n    loadPosts(page, limit).then(data => setPosts(posts.concat(data)));\n  };\n\n  return /*#__PURE__*/React.createElement(\"main\", {\n    className: \"uk-main uk-section uk-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FilterBar, {\n    handleSortChange: handleSortChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(PostsList, {\n    posts: posts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(LoadMore, {\n    handleLoadMore: handleLoadMore,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Pagination, {\n    handlePaginationSelect: handlePaginationSelect,\n    totalPages: totalPages,\n    currentPage: currentPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/User/Desktop/New app/src/components/Main/Main.js"],"names":["React","useState","useEffect","FilterBar","PostsList","LoadMore","Pagination","loadPosts","TOTAL_COUNT","Main","posts","setPosts","limit","setLimit","sort","setSort","currentPage","setCurrentPage","isLoadMore","setIsLoadMore","totalPages","Math","ceil","then","data","handleSortChange","selectedSort","console","log","handleLimitChange","selectedLimit","handlePaginationSelect","selectedPage","handleLoadMore","page","concat"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport FilterBar from \"./FilterBar/FilterBar\";\r\nimport PostsList from \"./PostsList/PostsList\";\r\nimport LoadMore from \"./LoadMore/LoadMore\";\r\nimport Pagination from \"./Pagination/Pagination\";\r\n\r\nimport { loadPosts } from '../../api';\r\n\r\nconst TOTAL_COUNT = 100;\r\n\r\nexport default function Main() {\r\n  const [posts, setPosts] = useState([]);\r\n  const [limit, setLimit] = useState(6);\r\n  const [sort, setSort] = useState(\"ASC\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [isLoadMore, setIsLoadMore] = useState(false);\r\n  const totalPages = Math.ceil(TOTAL_COUNT / limit)\r\n\r\n  useEffect(() => {\r\n    loadPosts()\r\n      .then((data) => setPosts(data));\r\n  }, []);\r\n\r\n\r\n\r\n\r\n  const handleSortChange = (selectedSort) => {\r\n    setSort(selectedSort);\r\n    setIsLoadMore(false);\r\n\r\n    /*posts.sort(function(a,b){ \r\n      if (selectedSort = \"ASC\") {\r\n        return a.id - b.id\r\n      }\r\n      if (selectedSort = \"DESC\") {\r\n        return b.id - a.id\r\n      }\r\n    })*/\r\n    loadPosts(1, selectedSort)\r\n      .then((data) => setPosts(data));\r\n  };\r\n\r\n  console.log(posts);\r\n\r\n\r\n\r\n\r\n  const handleLimitChange = (selectedLimit) => {\r\n    setLimit(selectedLimit);\r\n    setCurrentPage(1);\r\n    setIsLoadMore(false);\r\n    loadPosts(1, selectedLimit)\r\n      .then((data) => setPosts(data));\r\n  };\r\n\r\n  const handlePaginationSelect = (selectedPage) => {\r\n    if (isLoadMore && selectedPage <= currentPage) return;\r\n  \r\n    setCurrentPage(selectedPage);\r\n    setIsLoadMore(false);\r\n    loadPosts(selectedPage, limit)\r\n      .then((data) => setPosts(data));\r\n  };\r\n\r\n  const handleLoadMore = () => {\r\n    const page = currentPage + 1;\r\n    setIsLoadMore(true);\r\n    setCurrentPage(page);\r\n    loadPosts(page, limit)\r\n      .then((data) => setPosts(posts.concat(data)));\r\n  };\r\n  \r\n  return (\r\n    <main className=\"uk-main uk-section uk-container\">\r\n      <FilterBar handleSortChange={handleSortChange} />\r\n      <PostsList posts={posts} />\r\n      <LoadMore handleLoadMore={handleLoadMore} />\r\n      <Pagination \r\n        handlePaginationSelect={handlePaginationSelect}\r\n        totalPages={totalPages}\r\n        currentPage={currentPage}\r\n      />\r\n    </main>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}